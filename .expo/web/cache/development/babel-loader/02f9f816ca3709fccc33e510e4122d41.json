{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\programming\\\\StoreStock\\\\node_modules\\\\react-native-chart-kit\\\\dist\\\\AbstractChart.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\n\nvar AbstractChart = function (_super) {\n  __extends(AbstractChart, _super);\n\n  function AbstractChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.calcScaler = function (data) {\n      if (_this.props.fromZero) {\n        return Math.max.apply(Math, __spreadArrays(data, [0])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else {\n        return Math.max.apply(Math, data) - Math.min.apply(Math, data) || 1;\n      }\n    };\n\n    _this.calcBaseHeight = function (data, height) {\n      var min = Math.min.apply(Math, data);\n      var max = Math.max.apply(Math, data);\n\n      if (min >= 0 && max >= 0) {\n        return height;\n      } else if (min < 0 && max <= 0) {\n        return 0;\n      } else if (min < 0 && max > 0) {\n        return height * max / _this.calcScaler(data);\n      }\n    };\n\n    _this.calcHeight = function (val, data, height) {\n      var max = Math.max.apply(Math, data);\n      var min = Math.min.apply(Math, data);\n\n      if (min < 0 && max > 0) {\n        return height * (val / _this.calcScaler(data));\n      } else if (min >= 0 && max >= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - min) / _this.calcScaler(data));\n      } else if (min < 0 && max <= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - max) / _this.calcScaler(data));\n      }\n    };\n\n    _this.renderHorizontalLines = function (config) {\n      var count = config.count,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n      var basePosition = height - height / 4;\n      return __spreadArrays(new Array(count + 1)).map(function (_, i) {\n        var y = basePosition / count * i + paddingTop;\n        return React.createElement(Line, _extends({\n          key: Math.random(),\n          x1: paddingRight,\n          y1: y,\n          x2: width,\n          y2: y\n        }, _this.getPropsForBackgroundLines(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }));\n      });\n    };\n\n    _this.renderHorizontalLine = function (config) {\n      var width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n      return React.createElement(Line, _extends({\n        key: Math.random(),\n        x1: paddingRight,\n        y1: height - height / 4 + paddingTop,\n        x2: width,\n        y2: height - height / 4 + paddingTop\n      }, _this.getPropsForBackgroundLines(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }));\n    };\n\n    _this.renderHorizontalLabels = function (config) {\n      var count = config.count,\n          data = config.data,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          _a = config.horizontalLabelRotation,\n          horizontalLabelRotation = _a === void 0 ? 0 : _a,\n          _b = config.decimalPlaces,\n          decimalPlaces = _b === void 0 ? 2 : _b,\n          _c = config.formatYLabel,\n          formatYLabel = _c === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _c;\n      var _d = _this.props,\n          _e = _d.yAxisLabel,\n          yAxisLabel = _e === void 0 ? \"\" : _e,\n          _f = _d.yAxisSuffix,\n          yAxisSuffix = _f === void 0 ? \"\" : _f,\n          _g = _d.yLabelsOffset,\n          yLabelsOffset = _g === void 0 ? 12 : _g;\n      return new Array(count === 1 ? 1 : count + 1).fill(1).map(function (_, i) {\n        var yLabel = String(i * count);\n\n        if (count === 1) {\n          yLabel = \"\" + yAxisLabel + formatYLabel(data[0].toFixed(decimalPlaces)) + yAxisSuffix;\n        } else {\n          var label = _this.props.fromZero ? _this.calcScaler(data) / count * i + Math.min.apply(Math, __spreadArrays(data, [0])) : _this.calcScaler(data) / count * i + Math.min.apply(Math, data);\n          yLabel = \"\" + yAxisLabel + formatYLabel(label.toFixed(decimalPlaces)) + yAxisSuffix;\n        }\n\n        var basePosition = height - height / 4;\n        var x = paddingRight - yLabelsOffset;\n        var y = count === 1 && _this.props.fromZero ? paddingTop + 4 : height * 3 / 4 - basePosition / count * i + paddingTop;\n        return React.createElement(Text, _extends({\n          rotation: horizontalLabelRotation,\n          origin: x + \", \" + y,\n          key: Math.random(),\n          x: x,\n          textAnchor: \"end\",\n          y: y\n        }, _this.getPropsForLabels(), _this.getPropsForHorizontalLabels(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }), yLabel);\n      });\n    };\n\n    _this.renderVerticalLabels = function (_a) {\n      var _b = _a.labels,\n          labels = _b === void 0 ? [] : _b,\n          width = _a.width,\n          height = _a.height,\n          paddingRight = _a.paddingRight,\n          paddingTop = _a.paddingTop,\n          _c = _a.horizontalOffset,\n          horizontalOffset = _c === void 0 ? 0 : _c,\n          _d = _a.stackedBar,\n          stackedBar = _d === void 0 ? false : _d,\n          _e = _a.verticalLabelRotation,\n          verticalLabelRotation = _e === void 0 ? 0 : _e,\n          _f = _a.formatXLabel,\n          formatXLabel = _f === void 0 ? function (xLabel) {\n        return xLabel;\n      } : _f;\n      var _g = _this.props,\n          _h = _g.xAxisLabel,\n          xAxisLabel = _h === void 0 ? \"\" : _h,\n          _j = _g.xLabelsOffset,\n          xLabelsOffset = _j === void 0 ? 0 : _j,\n          _k = _g.hidePointsAtIndex,\n          hidePointsAtIndex = _k === void 0 ? [] : _k;\n      var fontSize = 12;\n      var fac = 1;\n\n      if (stackedBar) {\n        fac = 0.71;\n      }\n\n      return labels.map(function (label, i) {\n        if (hidePointsAtIndex.includes(i)) {\n          return null;\n        }\n\n        var x = ((width - paddingRight) / labels.length * i + paddingRight + horizontalOffset) * fac;\n        var y = height * 3 / 4 + paddingTop + fontSize * 2 + xLabelsOffset;\n        return React.createElement(Text, _extends({\n          origin: x + \", \" + y,\n          rotation: verticalLabelRotation,\n          key: Math.random(),\n          x: x,\n          y: y,\n          textAnchor: verticalLabelRotation === 0 ? \"middle\" : \"start\"\n        }, _this.getPropsForLabels(), _this.getPropsForVerticalLabels(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }\n        }), \"\" + formatXLabel(label) + xAxisLabel);\n      });\n    };\n\n    _this.renderVerticalLines = function (_a) {\n      var data = _a.data,\n          width = _a.width,\n          height = _a.height,\n          paddingTop = _a.paddingTop,\n          paddingRight = _a.paddingRight;\n      var _b = _this.props.yAxisInterval,\n          yAxisInterval = _b === void 0 ? 1 : _b;\n      return __spreadArrays(new Array(Math.ceil(data.length / yAxisInterval))).map(function (_, i) {\n        return React.createElement(Line, _extends({\n          key: Math.random(),\n          x1: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y1: 0,\n          x2: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y2: height - height / 4 + paddingTop\n        }, _this.getPropsForBackgroundLines(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        }));\n      });\n    };\n\n    _this.renderVerticalLine = function (_a) {\n      var height = _a.height,\n          paddingTop = _a.paddingTop,\n          paddingRight = _a.paddingRight;\n      return React.createElement(Line, _extends({\n        key: Math.random(),\n        x1: Math.floor(paddingRight),\n        y1: 0,\n        x2: Math.floor(paddingRight),\n        y2: height - height / 4 + paddingTop\n      }, _this.getPropsForBackgroundLines(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }));\n    };\n\n    _this.renderDefs = function (config) {\n      var width = config.width,\n          height = config.height,\n          backgroundGradientFrom = config.backgroundGradientFrom,\n          backgroundGradientTo = config.backgroundGradientTo,\n          useShadowColorFromDataset = config.useShadowColorFromDataset,\n          data = config.data;\n      var fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\") ? config.backgroundGradientFromOpacity : 1.0;\n      var toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\") ? config.backgroundGradientToOpacity : 1.0;\n      var fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\") ? config.fillShadowGradient : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientOpacity = config.hasOwnProperty(\"fillShadowGradientOpacity\") ? config.fillShadowGradientOpacity : 0.1;\n      return React.createElement(Defs, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, React.createElement(LinearGradient, {\n        id: \"backgroundGradient\",\n        x1: 0,\n        y1: height,\n        x2: width,\n        y2: 0,\n        gradientUnits: \"userSpaceOnUse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, React.createElement(Stop, {\n        offset: \"0\",\n        stopColor: backgroundGradientFrom,\n        stopOpacity: fromOpacity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }), React.createElement(Stop, {\n        offset: \"1\",\n        stopColor: backgroundGradientTo,\n        stopOpacity: toOpacity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      })), useShadowColorFromDataset ? data.map(function (dataset, index) {\n        return React.createElement(LinearGradient, {\n          id: \"fillShadowGradient_\" + index,\n          key: \"\" + index,\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: height,\n          gradientUnits: \"userSpaceOnUse\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 84\n          }\n        }, React.createElement(Stop, {\n          offset: \"0\",\n          stopColor: dataset.color ? dataset.color(1.0) : fillShadowGradient,\n          stopOpacity: fillShadowGradientOpacity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }\n        }), React.createElement(Stop, {\n          offset: \"1\",\n          stopColor: dataset.color ? dataset.color(fillShadowGradientOpacity) : fillShadowGradient,\n          stopOpacity: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }\n        }));\n      }) : React.createElement(LinearGradient, {\n        id: \"fillShadowGradient\",\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: height,\n        gradientUnits: \"userSpaceOnUse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 40\n        }\n      }, React.createElement(Stop, {\n        offset: \"0\",\n        stopColor: fillShadowGradient,\n        stopOpacity: fillShadowGradientOpacity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }), React.createElement(Stop, {\n        offset: \"1\",\n        stopColor: fillShadowGradient,\n        stopOpacity: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  AbstractChart.prototype.getPropsForBackgroundLines = function () {\n    var _a = this.props.chartConfig.propsForBackgroundLines,\n        propsForBackgroundLines = _a === void 0 ? {} : _a;\n    return __assign({\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1\n    }, propsForBackgroundLines);\n  };\n\n  AbstractChart.prototype.getPropsForLabels = function () {\n    var _a = this.props.chartConfig,\n        _b = _a.propsForLabels,\n        propsForLabels = _b === void 0 ? {} : _b,\n        color = _a.color,\n        _c = _a.labelColor,\n        labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fontSize: 12,\n      fill: labelColor(0.8)\n    }, propsForLabels);\n  };\n\n  AbstractChart.prototype.getPropsForVerticalLabels = function () {\n    var _a = this.props.chartConfig,\n        _b = _a.propsForVerticalLabels,\n        propsForVerticalLabels = _b === void 0 ? {} : _b,\n        color = _a.color,\n        _c = _a.labelColor,\n        labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForVerticalLabels);\n  };\n\n  AbstractChart.prototype.getPropsForHorizontalLabels = function () {\n    var _a = this.props.chartConfig,\n        _b = _a.propsForHorizontalLabels,\n        propsForHorizontalLabels = _b === void 0 ? {} : _b,\n        color = _a.color,\n        _c = _a.labelColor,\n        labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForHorizontalLabels);\n  };\n\n  return AbstractChart;\n}(Component);\n\nexport default AbstractChart;","map":{"version":3,"sources":["../src/AbstractChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\n\nimport { ChartConfig, Dataset, PartialBy } from \"./HelperTypes\";\n\nexport interface AbstractChartProps {\n  fromZero?: boolean;\n  chartConfig?: AbstractChartConfig;\n  yAxisLabel?: string;\n  yAxisSuffix?: string;\n  yLabelsOffset?: number;\n  yAxisInterval?: number;\n  xAxisLabel?: string;\n  xLabelsOffset?: number;\n  hidePointsAtIndex?: number[];\n}\n\nexport interface AbstractChartConfig extends ChartConfig {\n  count?: number;\n  data?: Dataset[];\n  width?: number;\n  height?: number;\n  paddingTop?: number;\n  paddingRight?: number;\n  horizontalLabelRotation?: number;\n  formatYLabel?: (yLabel: string) => string;\n  labels?: string[];\n  horizontalOffset?: number;\n  stackedBar?: boolean;\n  verticalLabelRotation?: number;\n  formatXLabel?: (xLabel: string) => string;\n}\n\nexport type AbstractChartState = {};\n\nclass AbstractChart<\n  IProps extends AbstractChartProps,\n  IState extends AbstractChartState\n> extends Component<AbstractChartProps & IProps, AbstractChartState & IState> {\n  calcScaler = (data: number[]) => {\n    if (this.props.fromZero) {\n      return Math.max(...data, 0) - Math.min(...data, 0) || 1;\n    } else {\n      return Math.max(...data) - Math.min(...data) || 1;\n    }\n  };\n\n  calcBaseHeight = (data: number[], height: number) => {\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    if (min >= 0 && max >= 0) {\n      return height;\n    } else if (min < 0 && max <= 0) {\n      return 0;\n    } else if (min < 0 && max > 0) {\n      return (height * max) / this.calcScaler(data);\n    }\n  };\n\n  calcHeight = (val: number, data: number[], height: number) => {\n    const max = Math.max(...data);\n    const min = Math.min(...data);\n\n    if (min < 0 && max > 0) {\n      return height * (val / this.calcScaler(data));\n    } else if (min >= 0 && max >= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - min) / this.calcScaler(data));\n    } else if (min < 0 && max <= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - max) / this.calcScaler(data));\n    }\n  };\n\n  getPropsForBackgroundLines() {\n    const { propsForBackgroundLines = {} } = this.props.chartConfig;\n    return {\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1,\n      ...propsForBackgroundLines\n    };\n  }\n\n  getPropsForLabels() {\n    const {\n      propsForLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fontSize: 12,\n      fill: labelColor(0.8),\n      ...propsForLabels\n    };\n  }\n\n  getPropsForVerticalLabels() {\n    const {\n      propsForVerticalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForVerticalLabels\n    };\n  }\n\n  getPropsForHorizontalLabels() {\n    const {\n      propsForHorizontalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForHorizontalLabels\n    };\n  }\n\n  renderHorizontalLines = config => {\n    const { count, width, height, paddingTop, paddingRight } = config;\n    const basePosition = height - height / 4;\n\n    return [...new Array(count + 1)].map((_, i) => {\n      const y = (basePosition / count) * i + paddingTop;\n      return (\n        <Line\n          key={Math.random()}\n          x1={paddingRight}\n          y1={y}\n          x2={width}\n          y2={y}\n          {...this.getPropsForBackgroundLines()}\n        />\n      );\n    });\n  };\n\n  renderHorizontalLine = config => {\n    const { width, height, paddingTop, paddingRight } = config;\n    return (\n      <Line\n        key={Math.random()}\n        x1={paddingRight}\n        y1={height - height / 4 + paddingTop}\n        x2={width}\n        y2={height - height / 4 + paddingTop}\n        {...this.getPropsForBackgroundLines()}\n      />\n    );\n  };\n\n  renderHorizontalLabels = (\n    config: Omit<AbstractChartConfig, \"data\"> & { data: number[] }\n  ) => {\n    const {\n      count,\n      data,\n      height,\n      paddingTop,\n      paddingRight,\n      horizontalLabelRotation = 0,\n      decimalPlaces = 2,\n      formatYLabel = (yLabel: string) => yLabel\n    } = config;\n\n    const {\n      yAxisLabel = \"\",\n      yAxisSuffix = \"\",\n      yLabelsOffset = 12\n    } = this.props;\n    return new Array(count === 1 ? 1 : count + 1).fill(1).map((_, i) => {\n      let yLabel = String(i * count);\n\n      if (count === 1) {\n        yLabel = `${yAxisLabel}${formatYLabel(\n          data[0].toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      } else {\n        const label = this.props.fromZero\n          ? (this.calcScaler(data) / count) * i + Math.min(...data, 0)\n          : (this.calcScaler(data) / count) * i + Math.min(...data);\n        yLabel = `${yAxisLabel}${formatYLabel(\n          label.toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      }\n\n      const basePosition = height - height / 4;\n      const x = paddingRight - yLabelsOffset;\n      const y =\n        count === 1 && this.props.fromZero\n          ? paddingTop + 4\n          : (height * 3) / 4 - (basePosition / count) * i + paddingTop;\n      return (\n        <Text\n          rotation={horizontalLabelRotation}\n          origin={`${x}, ${y}`}\n          key={Math.random()}\n          x={x}\n          textAnchor=\"end\"\n          y={y}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForHorizontalLabels()}\n        >\n          {yLabel}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLabels = ({\n    labels = [],\n    width,\n    height,\n    paddingRight,\n    paddingTop,\n    horizontalOffset = 0,\n    stackedBar = false,\n    verticalLabelRotation = 0,\n    formatXLabel = xLabel => xLabel\n  }: Pick<\n    AbstractChartConfig,\n    | \"labels\"\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"horizontalOffset\"\n    | \"stackedBar\"\n    | \"verticalLabelRotation\"\n    | \"formatXLabel\"\n  >) => {\n    const {\n      xAxisLabel = \"\",\n      xLabelsOffset = 0,\n      hidePointsAtIndex = []\n    } = this.props;\n\n    const fontSize = 12;\n\n    let fac = 1;\n    if (stackedBar) {\n      fac = 0.71;\n    }\n\n    return labels.map((label, i) => {\n      if (hidePointsAtIndex.includes(i)) {\n        return null;\n      }\n\n      const x =\n        (((width - paddingRight) / labels.length) * i +\n          paddingRight +\n          horizontalOffset) *\n        fac;\n\n      const y = (height * 3) / 4 + paddingTop + fontSize * 2 + xLabelsOffset;\n\n      return (\n        <Text\n          origin={`${x}, ${y}`}\n          rotation={verticalLabelRotation}\n          key={Math.random()}\n          x={x}\n          y={y}\n          textAnchor={verticalLabelRotation === 0 ? \"middle\" : \"start\"}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForVerticalLabels()}\n        >\n          {`${formatXLabel(label)}${xAxisLabel}`}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLines = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight\n  }: Omit<\n    Pick<\n      AbstractChartConfig,\n      \"data\" | \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\"\n    >,\n    \"data\"\n  > & { data: number[] }) => {\n    const { yAxisInterval = 1 } = this.props;\n\n    return [...new Array(Math.ceil(data.length / yAxisInterval))].map(\n      (_, i) => {\n        return (\n          <Line\n            key={Math.random()}\n            x1={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y1={0}\n            x2={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y2={height - height / 4 + paddingTop}\n            {...this.getPropsForBackgroundLines()}\n          />\n        );\n      }\n    );\n  };\n\n  renderVerticalLine = ({\n    height,\n    paddingTop,\n    paddingRight\n  }: Pick<AbstractChartConfig, \"height\" | \"paddingRight\" | \"paddingTop\">) => (\n    <Line\n      key={Math.random()}\n      x1={Math.floor(paddingRight)}\n      y1={0}\n      x2={Math.floor(paddingRight)}\n      y2={height - height / 4 + paddingTop}\n      {...this.getPropsForBackgroundLines()}\n    />\n  );\n\n  renderDefs = (\n    config: Pick<\n      PartialBy<\n        AbstractChartConfig,\n        | \"backgroundGradientFromOpacity\"\n        | \"backgroundGradientToOpacity\"\n        | \"fillShadowGradient\"\n        | \"fillShadowGradientOpacity\"\n      >,\n      | \"width\"\n      | \"height\"\n      | \"backgroundGradientFrom\"\n      | \"backgroundGradientTo\"\n      | \"useShadowColorFromDataset\"\n      | \"data\"\n      | \"backgroundGradientFromOpacity\"\n      | \"backgroundGradientToOpacity\"\n      | \"fillShadowGradient\"\n      | \"fillShadowGradientOpacity\"\n    >\n  ) => {\n    const {\n      width,\n      height,\n      backgroundGradientFrom,\n      backgroundGradientTo,\n      useShadowColorFromDataset,\n      data\n    } = config;\n\n    const fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\")\n      ? config.backgroundGradientFromOpacity\n      : 1.0;\n    const toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\")\n      ? config.backgroundGradientToOpacity\n      : 1.0;\n\n    const fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\")\n      ? config.fillShadowGradient\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientOpacity = config.hasOwnProperty(\n      \"fillShadowGradientOpacity\"\n    )\n      ? config.fillShadowGradientOpacity\n      : 0.1;\n\n    return (\n      <Defs>\n        <LinearGradient\n          id=\"backgroundGradient\"\n          x1={0}\n          y1={height}\n          x2={width}\n          y2={0}\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <Stop\n            offset=\"0\"\n            stopColor={backgroundGradientFrom}\n            stopOpacity={fromOpacity}\n          />\n          <Stop\n            offset=\"1\"\n            stopColor={backgroundGradientTo}\n            stopOpacity={toOpacity}\n          />\n        </LinearGradient>\n        {useShadowColorFromDataset ? (\n          data.map((dataset, index) => (\n            <LinearGradient\n              id={`fillShadowGradient_${index}`}\n              key={`${index}`}\n              x1={0}\n              y1={0}\n              x2={0}\n              y2={height}\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <Stop\n                offset=\"0\"\n                stopColor={\n                  dataset.color ? dataset.color(1.0) : fillShadowGradient\n                }\n                stopOpacity={fillShadowGradientOpacity}\n              />\n              <Stop\n                offset=\"1\"\n                stopColor={\n                  dataset.color\n                    ? dataset.color(fillShadowGradientOpacity)\n                    : fillShadowGradient\n                }\n                stopOpacity=\"0\"\n              />\n            </LinearGradient>\n          ))\n        ) : (\n          <LinearGradient\n            id=\"fillShadowGradient\"\n            x1={0}\n            y1={0}\n            x2={0}\n            y2={height}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop\n              offset=\"0\"\n              stopColor={fillShadowGradient}\n              stopOpacity={fillShadowGradientOpacity}\n            />\n            <Stop offset=\"1\" stopColor={fillShadowGradient} stopOpacity=\"0\" />\n          </LinearGradient>\n        )}\n      </Defs>\n    );\n  };\n}\n\nexport default AbstractChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}